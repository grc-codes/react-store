{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyAdEhkwBKQ3HJoYlHR48R3ksdZ70szmSCc\",\n  authDomain: \"react-store-b9a32.firebaseapp.com\",\n  databaseURL: \"https://react-store-b9a32.firebaseio.com\",\n  projectId: \"react-store-b9a32\",\n  storageBucket: \"react-store-b9a32.appspot.com\",\n  messagingSenderId: \"971841807659\",\n  appId: \"1:971841807659:web:062252443895d3a70d516e\",\n  measurementId: \"G-PK7VMC192J\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  console.log(`userAuth: ${userAuth}`);\n  console.log(userAuth);\n  const userRef = firestore.doc(`users/a12345`);\n  console.log(`userRef: ${userRef}`);\n  const snapShot = await userRef.get();\n  console.log(`snapShot: ${snapShot}`);\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName: 'Test User',\n        email: 'randomemail@gmail.com',\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('Error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const SignInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/andrewgarcia/projects/react-store/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","console","log","userRef","firestore","doc","snapShot","get","exists","displayName","email","createdAt","Date","set","error","message","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","SignInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,mCAFD;AAGXC,EAAAA,WAAW,EAAE,0CAHF;AAIXC,EAAAA,SAAS,EAAE,mBAJA;AAKXC,EAAAA,aAAa,EAAE,+BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWAT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB;AAEA,OAAO,MAAMU,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzE,MAAI,CAACD,QAAL,EAAe;AACfE,EAAAA,OAAO,CAACC,GAAR,CAAa,aAAYH,QAAS,EAAlC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,QAAMI,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,cAAf,CAAhB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAa,YAAWC,OAAQ,EAAhC;AAEA,QAAMG,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAa,aAAYI,QAAS,EAAlC;;AAEA,MAAG,CAACA,QAAQ,CAACE,MAAb,EAAqB;AACjB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBX,QAA/B;AACA,UAAMY,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACA,YAAMT,OAAO,CAACU,GAAR,CAAY;AACdJ,QAAAA,WAAW,EAAE,WADC;AAEdC,QAAAA,KAAK,EAAE,uBAFO;AAGdC,QAAAA,SAHc;AAId,WAAGX;AAJW,OAAZ,CAAN;AAMH,KAPD,CAOE,OAAMc,KAAN,EAAa;AACXb,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCY,KAAK,CAACC,OAAzC;AACH;AACJ;;AACD,SAAOZ,OAAP;AACH,CA1BM;AA4BP,OAAO,MAAMa,IAAI,GAAG7B,QAAQ,CAAC6B,IAAT,EAAb;AACP,OAAO,MAAMZ,SAAS,GAAGjB,QAAQ,CAACiB,SAAT,EAAlB;AAEP,MAAMa,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe9B,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyAdEhkwBKQ3HJoYlHR48R3ksdZ70szmSCc\",\n    authDomain: \"react-store-b9a32.firebaseapp.com\",\n    databaseURL: \"https://react-store-b9a32.firebaseio.com\",\n    projectId: \"react-store-b9a32\",\n    storageBucket: \"react-store-b9a32.appspot.com\",\n    messagingSenderId: \"971841807659\",\n    appId: \"1:971841807659:web:062252443895d3a70d516e\",\n    measurementId: \"G-PK7VMC192J\"\n};\n\nfirebase.initializeApp(config);\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) return;\n    console.log(`userAuth: ${userAuth}`);\n    console.log(userAuth);\n\n    const userRef = firestore.doc(`users/a12345`);\n    console.log(`userRef: ${userRef}`);\n\n    const snapShot = await userRef.get();\n    console.log(`snapShot: ${snapShot}`);\n    \n    if(!snapShot.exists) {\n        const { displayName, email } = userAuth;\n        const createdAt = new Date();\n        try {\n            await userRef.set({\n                displayName: 'Test User',\n                email: 'randomemail@gmail.com',\n                createdAt,\n                ...additionalData\n            });\n        } catch(error) {\n            console.log('Error creating user', error.message);\n        }\n    }\n    return userRef;\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const SignInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}