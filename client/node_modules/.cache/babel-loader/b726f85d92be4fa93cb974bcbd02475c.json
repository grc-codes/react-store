{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport function* fetchCollectionsAsync() {\n  yield console.log('Function fired');\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\n;\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n;","map":{"version":3,"sources":["/Users/andrewgarcia/projects/react-store/src/redux/shop/shop.saga.js"],"names":["takeEvery","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsAsync","console","log","collectionRef","collection","get","then","snapshot","collectionsMap","dispatch","fetchCollectionsSuccess","catch","error","fetchCollectionsFailure","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAN;AACA,QAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACAD,EAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,UAAMC,cAAc,GAAGT,+BAA+B,CAACQ,QAAD,CAAtD;AACAE,IAAAA,QAAQ,CAACC,uBAAuB,CAACF,cAAD,CAAxB,CAAR;AACH,GAHD,EAGGG,KAHH,CAGSC,KAAK,IAAIH,QAAQ,CAACI,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAH1B;AAIH;AAAA;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMnB,SAAS,CACXC,eAAe,CAACmB,uBADL,EAEXhB,qBAFW,CAAf;AAIH;AAAA","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport function* fetchCollectionsAsync() {\n    yield console.log('Function fired');\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n};\n\nexport function* fetchCollectionsStart() {\n    yield takeEvery(\n        ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollectionsAsync\n    );\n};\n"]},"metadata":{},"sourceType":"module"}